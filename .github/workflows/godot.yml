name: Build & Deploy
run-name: ${{ github.actor }} is testing the Godot build
on: 
  push:
    tags:
      - "v*"
jobs:
  export_game:
    runs-on: ubuntu-latest
    permissions: write-all
    
    name: Export Game
    steps:
    - name: checkout
      uses: actions/checkout@v3.3.0
  
    - name: export game
      id: export
      uses: firebelley/godot-export@v5.2.0
      with:
        godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.2.2/Godot_v4.2.2-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.2.2/Godot_v4.2.2-stable_export_templates.tpz
        relative_project_path: ./
        archive_output: true
        cache: true

    # adds a release to the release page
    - name: create release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*

    - name: List files in archive directory
      run: ls -l ${{ steps.export.outputs.archive_directory }}

    - name: itch web push
      uses: Ayowel/butler-to-itch@v1
      with:
        butler_key: ${{ secrets.BUTLER_CREDENTIALS }}
        itch_user: zksx
        itch_game: sports-ball
        version: ${{ github.ref_name }}
        # We assume that we have the following files in ./build:
        # release-linux.tar.gz, release-windows.zip,
        # release-mac.zip, java-release.apk
        files: build/SportsBall-*
